// <auto-generated />
using System;
using ApiService.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiService.Entities.Choice", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("next_output_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("previous_output_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("next_output_id")
                        .IsUnique()
                        .HasFilter("[next_output_id] IS NOT NULL");

                    b.HasIndex("previous_output_id");

                    b.ToTable("choices");
                });

            modelBuilder.Entity("ApiService.Entities.Output", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("next_output_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("previous_output_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("next_output_id")
                        .IsUnique()
                        .HasFilter("[next_output_id] IS NOT NULL");

                    b.HasIndex("previous_output_id")
                        .IsUnique()
                        .HasFilter("[previous_output_id] IS NOT NULL");

                    b.ToTable("outputs");
                });

            modelBuilder.Entity("ApiService.Entities.Choice", b =>
                {
                    b.HasOne("ApiService.Entities.Output", "nextOutput")
                        .WithOne("previousChoice")
                        .HasForeignKey("ApiService.Entities.Choice", "next_output_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiService.Entities.Output", "previousOutput")
                        .WithMany("choices")
                        .HasForeignKey("previous_output_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("nextOutput");

                    b.Navigation("previousOutput");
                });

            modelBuilder.Entity("ApiService.Entities.Output", b =>
                {
                    b.HasOne("ApiService.Entities.Output", "NextOutput")
                        .WithOne()
                        .HasForeignKey("ApiService.Entities.Output", "next_output_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiService.Entities.Output", "PreviousOutput")
                        .WithOne()
                        .HasForeignKey("ApiService.Entities.Output", "previous_output_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("NextOutput");

                    b.Navigation("PreviousOutput");
                });

            modelBuilder.Entity("ApiService.Entities.Output", b =>
                {
                    b.Navigation("choices");

                    b.Navigation("previousChoice");
                });
#pragma warning restore 612, 618
        }
    }
}
